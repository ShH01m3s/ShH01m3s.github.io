<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unsorted on Analyst</title>
    <link>https://bakerst221b.com/docs/toolkit/general/</link>
    <description>Recent content in Unsorted on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Aug 2020 09:49:24 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/docs/toolkit/general/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac Setup Script</title>
      <link>https://bakerst221b.com/docs/toolkit/general/mac-setup-script/</link>
      <pubDate>Wed, 30 Sep 2020 18:33:56 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/mac-setup-script/</guid>
      <description># oh my zsh bash themes sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; # sh -c &amp;#34;$(fetch -o - https://raw.</description>
    </item>
    
    <item>
      <title>BTFM for Reverse Engineering</title>
      <link>https://bakerst221b.com/docs/toolkit/general/reverse-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/reverse-btfm/</guid>
      <description>Rabin2 rabin2 -I [progname] # main info about the prog rabin2 -z [progname] # the strings from the binary&amp;#39;s data section rabin2 -zz [progname] # all strings from the binary rabin2 -zqq [progname] # strings only without additional info R2 r2 [progname] # launch radare2  &amp;gt; s main # seak main function and go to it &amp;gt; aa # find all strings &amp;gt; v # psedu GUI mode (Hex editor) &amp;gt; VV # graph mode &amp;gt; afvn user_input input # rename local var and all the places it was referenced # rename function &amp;gt; s function_old_name &amp;gt; afn function_new_name &amp;gt; c # show cursor in visual mode &amp;gt; afvd # print all local variables Graph mode VV # open Graph # go to a function via shortcut (;[ao]) o # first type &amp;#39;o&amp;#39; key &amp;gt; a # then enter the second letter from the brakets CMD rundll32.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://bakerst221b.com/docs/toolkit/general/docker/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/docker/</guid>
      <description>docker run --name repo alpine/git clone https://github.com/docker/getting-started.git docker cp repo:/git/getting-started/ . Cd getting-started docker build -t docker101tutorial .</description>
    </item>
    
    <item>
      <title>Forensic Toolkit</title>
      <link>https://bakerst221b.com/docs/toolkit/general/forensic-toolkit/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/forensic-toolkit/</guid>
      <description>Here I will collect my arsenal of tools for forensic analysis.
Autopsy There is a good course from Basis Technology about there own tool, of course, and I am sure there are lot&amp;rsquo;s of other tutorials out there available for free, so, this is not meant to be complete user guide.</description>
    </item>
    
    <item>
      <title>Python BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/general/python-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/python-btfm/</guid>
      <description>Beautiful Python üêç, which has so many small blocks of code that ease the task so much!</description>
    </item>
    
    <item>
      <title>Python Magic</title>
      <link>https://bakerst221b.com/docs/toolkit/general/python-magic/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/python-magic/</guid>
      <description>Beautiful Python üêç, which has so many small blocks of code that ease the task so much!</description>
    </item>
    
    <item>
      <title>Reverse Engineering iOS applications</title>
      <link>https://bakerst221b.com/docs/toolkit/general/ios-reverse-eng/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/ios-reverse-eng/</guid>
      <description>https://medium.com/@0xff7/setting-up-an-ios-hacking-environment-e349923f20c9</description>
    </item>
    
    <item>
      <title>Reverse Engineering Toolkit</title>
      <link>https://bakerst221b.com/docs/toolkit/general/reverse-toolkit/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/general/reverse-toolkit/</guid>
      <description>Debuggers OllyDbg One of the veterans.
Install:
Common commands:
Keywords:
Analogues: x64dbg, radare2
**Possible issues: **</description>
    </item>
    
  </channel>
</rss>
