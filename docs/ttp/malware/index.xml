<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ðŸ”¬ Malware Analysis on Analyst</title>
    <link>https://bakerst221b.com/docs/ttp/malware/</link>
    <description>Recent content in ðŸ”¬ Malware Analysis on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://bakerst221b.com/docs/ttp/malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ðŸ¤” How Do I Spot Malware?</title>
      <link>https://bakerst221b.com/docs/ttp/malware/find/</link>
      <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bakerst221b.com/docs/ttp/malware/find/</guid>
      <description>&lt;p&gt;&lt;em&gt;The number or applications installed or present on a device can sometimes be frightening. Not all of them are installed with the user&amp;rsquo;s consent. Some of them might be malicious. How does one spot these little pesky rodents?&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ðŸ““ REFM</title>
      <link>https://bakerst221b.com/docs/ttp/malware/reverse-rtfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/ttp/malware/reverse-rtfm/</guid>
      <description>Rabin2 rabin2 -I [progname] # main info about the prog rabin2 -z [progname] # the strings from the binary&amp;#39;s data section rabin2 -zz [progname] # all strings from the binary rabin2 -zqq [progname] # strings only without additional info rabin2 -x iGoat-Swift # thin the binary R2 Info il # libs in use ii # or iiq to see imports r2 [progname] # launch radare2 &amp;gt; s main # seak main function and go to it &amp;gt; aa # find all strings &amp;gt; v # psedu GUI mode (Hex editor) &amp;gt; VV # graph mode &amp;gt; afvn user_input input # rename local var and all the places it was referenced # rename function &amp;gt; s function_old_name &amp;gt; afn function_new_name &amp;gt; c # show cursor in visual mode &amp;gt; afvd # print all local variables &amp;gt; u # back?</description>
    </item>
    
  </channel>
</rss>
