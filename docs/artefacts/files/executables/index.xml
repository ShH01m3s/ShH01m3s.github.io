<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ðŸ©» Anatomy Of Executables on Analyst</title>
    <link>https://bakerst221b.com/docs/artefacts/files/executables/</link>
    <description>Recent content in ðŸ©» Anatomy Of Executables on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jul 2022 15:14:39 +1000</lastBuildDate><atom:link href="https://bakerst221b.com/docs/artefacts/files/executables/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apple Mach-O</title>
      <link>https://bakerst221b.com/docs/artefacts/files/executables/macho/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/artefacts/files/executables/macho/</guid>
      <description>Binary info otool Using otool we can get general info about the Mach-O file:
otool -h [app_name] &amp;gt; Mach header magic cputype cpusubtype caps filetype ncmds sizeofcmds flags 0xfeedfacf 16777228 0 0x00 2 115 11384 0x00218085 Quick refernce on the meaning:</description>
    </item>
    
    <item>
      <title>Delphi</title>
      <link>https://bakerst221b.com/docs/artefacts/files/executables/delphi/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bakerst221b.com/docs/artefacts/files/executables/delphi/</guid>
      <description>This one is particularly tiresome to reverse. Some advice:
Set calling convention for fastcall if it&amp;rsquo;s not set properly (IDA Pro doesn&amp;rsquo;t, not sure about radare2) Delphi programs have a lot of structures.</description>
    </item>
    
    <item>
      <title>Go Malware</title>
      <link>https://bakerst221b.com/docs/artefacts/files/executables/go/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bakerst221b.com/docs/artefacts/files/executables/go/</guid>
      <description>When compiled are huge in size.
References Expand&amp;hellip; Something here </description>
    </item>
    
    <item>
      <title>ELF Files</title>
      <link>https://bakerst221b.com/docs/artefacts/files/executables/linux-elf/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/artefacts/files/executables/linux-elf/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is about &amp;hellip; .&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows PE</title>
      <link>https://bakerst221b.com/docs/artefacts/files/executables/win-pe/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/artefacts/files/executables/win-pe/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ðŸ¤– Reverse Engineering Android Applications</title>
      <link>https://bakerst221b.com/docs/artefacts/files/executables/android/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/artefacts/files/executables/android/</guid>
      <description>In this article I&amp;rsquo;m assembling information about debugging applications on Android, then all possible to anti-debugging techniques and how they can be curcumvented (a little spoiler here - almoust always one way ðŸ˜€) .</description>
    </item>
    
  </channel>
</rss>
