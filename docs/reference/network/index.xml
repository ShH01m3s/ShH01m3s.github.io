<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network Activity Analysis Reference ðŸ“š on Analyst</title>
    <link>https://bakerst221b.com/docs/reference/network/</link>
    <description>Recent content in Network Activity Analysis Reference ðŸ“š on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Nov 2018 15:14:39 +1000</lastBuildDate><atom:link href="https://bakerst221b.com/docs/reference/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP/IP Stack Overview</title>
      <link>https://bakerst221b.com/docs/reference/network/tcp-ip/</link>
      <pubDate>Sun, 29 Nov 2020 15:20:08 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/network/tcp-ip/</guid>
      <description>This article is an overview of TCP/IP protocol stack. I will cover in detail what happens when a request to, say, bakerst221b.</description>
    </item>
    
    <item>
      <title>Chromesque Internals</title>
      <link>https://bakerst221b.com/docs/reference/network/chromesque/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/network/chromesque/</guid>
      <description>In the process of investigating Toy PD case, Iâ€™ve realised I lack the information about different browser files.</description>
    </item>
    
    <item>
      <title>Network Artifacts</title>
      <link>https://bakerst221b.com/docs/reference/network/artifacts/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/network/artifacts/</guid>
      <description>Ports idetify services (usually, but not always).
 System ports are forensically important 0-1023. User ports 1024-49151 Private 49152-last  Cheatsheets for known ports here.</description>
    </item>
    
    <item>
      <title>Wireless</title>
      <link>https://bakerst221b.com/docs/reference/network/wireless/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/network/wireless/</guid>
      <description>https://www.wirelesshack.org/best-kali-linux-compatible-usb-adapter-dongles.html
iwconfig
airmon-ng check kill
airmon-ng start wlan0
iwconfig
airodump-ng wlan0mon
airdump-ng -c &amp;lt;channel number&amp;gt; --bssid &amp;lt;access point MAC&amp;gt; -w capture wlan0mon to capture the handshake or enough data to deduce the key.</description>
    </item>
    
  </channel>
</rss>
