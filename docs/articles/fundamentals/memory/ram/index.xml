<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RAM on Analyst</title>
    <link>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/</link>
    <description>Recent content in RAM on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Aug 2020 09:49:24 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/docs/articles/fundamentals/memory/ram/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reference vs Value</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/reference-vs-value/</link>
      <pubDate>Mon, 05 Oct 2020 18:48:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/reference-vs-value/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>Mutable vs Immutable</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/mutable-vs-immutable/</link>
      <pubDate>Mon, 05 Oct 2020 18:48:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/mutable-vs-immutable/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; import ctypes &amp;gt;&amp;gt;&amp;gt; a = 5 &amp;gt;&amp;gt;&amp;gt; address = id(a) &amp;gt;&amp;gt;&amp;gt; address 4307917216 &amp;gt;&amp;gt;&amp;gt; ctypes.</description>
    </item>
    
    <item>
      <title>C Program Memory Layout</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/c-prog-memory-layout/</link>
      <pubDate>Sun, 27 Sep 2020 12:16:50 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/memory/ram/c-prog-memory-layout/</guid>
      <description>Intro At the very beginning of my career I found it hard to grasp the notion of memory layout and stack.</description>
    </item>
    
  </channel>
</rss>
