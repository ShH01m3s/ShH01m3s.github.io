<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reverse on Analyst</title>
    <link>https://bakerst221b.com/domain/reverse/</link>
    <description>Recent content in reverse on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Apr 2021 17:18:04 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/domain/reverse/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Lord of the Apple: The Return of the iPhone</title>
      <link>https://bakerst221b.com/docs/blog/2021/08/lord-of-the-apple/</link>
      <pubDate>Sun, 25 Apr 2021 17:18:04 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/08/lord-of-the-apple/</guid>
      <description>📆 22/08/2021 , Sunday, ☁️
🕰 11:21 AM.
It was a cloudy Sunday morning. I was sleeping peacefully till 8:45 AM when my daughter started crawling all over me and my husband asking wether I am awake already&amp;hellip; .</description>
    </item>
    
    <item>
      <title>To Carry Out MockInv&#39;estigation. Part 1</title>
      <link>https://bakerst221b.com/docs/blog/2021/06/toy-story-pd/</link>
      <pubDate>Sun, 25 Apr 2021 17:18:04 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/06/toy-story-pd/</guid>
      <description>❗SPOILER ALERT!
📆 16/06/2021 , Wednesday
🕰 09:21 PM.
It was a very sunny day and a very nice a long walk that my daughter and I had before lunch.</description>
    </item>
    
    <item>
      <title>To Carry Out MockInv&#39;estigation. Part 2</title>
      <link>https://bakerst221b.com/docs/blog/2021/06/magnet/</link>
      <pubDate>Sun, 25 Apr 2021 17:18:04 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/06/magnet/</guid>
      <description>📆 16/06/2021 , Wednesday
🕰 09:21 PM.
I had a 7-day license of Magnet AXIOM and I&amp;rsquo;ve decided to try this tool and compare it with others that I had.</description>
    </item>
    
    <item>
      <title>How I Got Started With ARM</title>
      <link>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-arm/</link>
      <pubDate>Sun, 07 Mar 2021 11:42:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-arm/</guid>
      <description>📆 Friday, 12th of March, 202
⏰ 09:00
☀️ It was a very deceptively sunny morning, children laughing and squeaking merrily.</description>
    </item>
    
    <item>
      <title>Analysis Tips</title>
      <link>https://bakerst221b.com/docs/malware-analysis/tips/</link>
      <pubDate>Sun, 07 Feb 2021 12:13:56 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/malware-analysis/tips/</guid>
      <description>In this article I&amp;rsquo;m collecting all the main tips for malware analysis. Some indicators of compromise, some common clues and etc.</description>
    </item>
    
    <item>
      <title>Ransomware 🔐</title>
      <link>https://bakerst221b.com/docs/malware-analysis/ransomware/</link>
      <pubDate>Sun, 07 Feb 2021 12:13:56 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/malware-analysis/ransomware/</guid>
      <description>General Info 2021 Trends Many leverage an Exchange vulnerability.
How To Find How To Defend References [1] Ransomware: Current Trends and Updates, Cindy Murphy, Magnet Summit 2021</description>
    </item>
    
    <item>
      <title>Positive and Negative Numbers</title>
      <link>https://bakerst221b.com/docs/reversing/basics/positive-and-negative-numbers/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/positive-and-negative-numbers/</guid>
      <description>Intro One&amp;rsquo;s complement Two complement </description>
    </item>
    
    <item>
      <title>Packed Executables</title>
      <link>https://bakerst221b.com/docs/reversing/packing/</link>
      <pubDate>Fri, 09 Oct 2020 10:31:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/packing/</guid>
      <description>There are several indicators that the executable is packed. Here they are (this list will be growing as I encounter new indicators):</description>
    </item>
    
    <item>
      <title>Reverse Engineering iOS Applications 🍏</title>
      <link>https://bakerst221b.com/docs/reversing/ios-reverse/</link>
      <pubDate>Fri, 09 Oct 2020 10:31:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/ios-reverse/</guid>
      <description>During forensic analysis it&amp;rsquo;s not too rare to run into some suspicious application. In this article I&amp;rsquo;m going to learn to reverse engineer iOS applications.</description>
    </item>
    
    <item>
      <title>Alloc8</title>
      <link>https://bakerst221b.com/docs/reversing/basics/exploits/alloc8/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/exploits/alloc8/</guid>
      <description>So, there are some prerequisites that one needs to have in order to get this exploit.</description>
    </item>
    
    <item>
      <title>Calling 🤙 Conventions in x86</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-calling-conventions/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-calling-conventions/</guid>
      <description>In this article I&amp;rsquo;m giving an overview of different calling conventions with examples.
Intro Consider the following code snippet:</description>
    </item>
    
    <item>
      <title>Checkm8</title>
      <link>https://bakerst221b.com/docs/reversing/basics/exploits/checkm8/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/exploits/checkm8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dynamic Analysis</title>
      <link>https://bakerst221b.com/docs/reversing/dynamic/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/dynamic/</guid>
      <description>This is more about cracking.
Cracking lab presents&amp;hellip;. . Staring: 🌟
Tools 🧰: OllyDbg as a debugger, Import Reconstructors as an &amp;hellip; wait for it &amp;hellip;.</description>
    </item>
    
    <item>
      <title>Flags</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-flags/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-flags/</guid>
      <description>CF Its full name is carry flag. Its main purpose is to tell that the resulting number after some operations is too much to bear for the registry size.</description>
    </item>
    
    <item>
      <title>Operations</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-operations/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-operations/</guid>
      <description>In this article I&amp;rsquo;m describing all assembly operations that I&amp;rsquo;ve encountered myseld and also wasn&amp;rsquo;t lazy anough to put down an explanation about here.</description>
    </item>
    
    <item>
      <title>Registers</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-registers/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-registers/</guid>
      <description>EAX EIP EBP RSI/ESI Source Index.
RSI - 64 bit, ESI - 32.
RDI/EDI Destination Index.</description>
    </item>
    
    <item>
      <title>Static Analysis</title>
      <link>https://bakerst221b.com/docs/reversing/static/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/static/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cracking 🔨</title>
      <link>https://bakerst221b.com/docs/reversing/basics/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/crack-me-algo/</guid>
      <description>&lt;p&gt;&lt;em&gt;Any cracking career is supposed to start with solving simple crackme&amp;rsquo;s. I&amp;rsquo;ve not been doing it all the time, but I&amp;rsquo;ve solved several of them from the simplest to a very hard one which required some math knowledge 😬. This allowed me to craft some sort of algorithm I would like to share.&amp;quot;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Crackme Algorithm</title>
      <link>https://bakerst221b.com/docs/reversing/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/crack-me-algo/</guid>
      <description>Look at the strings fs strings and f in radare2 or rabin -zz Find xrefs for the strings of interest axt @ str.</description>
    </item>
    
    <item>
      <title>From Src to Binary</title>
      <link>https://bakerst221b.com/docs/reversing/basics/from-src-to-binary/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/from-src-to-binary/</guid>
      <description>To read
https://www.airs.com/blog/archives/38</description>
    </item>
    
    <item>
      <title>Assembly Cheatsheet</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-cheatsheet/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:54 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-cheatsheet/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>ARM Assembly</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-arm/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-arm/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>Assembly Intro</title>
      <link>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-intro/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/basics/assebly/assembly-intro/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>How I Met Radare2</title>
      <link>https://bakerst221b.com/docs/blog/2020/09/how-i-met-radare2/</link>
      <pubDate>Thu, 24 Sep 2020 10:40:07 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2020/09/how-i-met-radare2/</guid>
      <description>📆 24/09/2020, Wednesday
🕰 7:00 What a nice morning! And it&amp;rsquo;s so great to be woken up by a high-pitched cry in the ear&amp;hellip; Well, after giving my daughter her breakfast and doing all the neccessary hygine procedures for us both, I left her by my side on the development carpet, so that I could develop myself&amp;hellip;</description>
    </item>
    
    <item>
      <title>Reverse Engineering Android Applications 🤖</title>
      <link>https://bakerst221b.com/docs/reversing/android-reverse/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/android-reverse/</guid>
      <description>In this article I&amp;rsquo;m assembling information about debugging applications on Android, then all possible to anti-debugging techniques and how they can be curcumvented (a little spoiler here - almoust always one way 😀) .</description>
    </item>
    
    <item>
      <title>Symbolic and Conrecte Execution</title>
      <link>https://bakerst221b.com/docs/reversing/binary-analysis/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reversing/binary-analysis/</guid>
      <description>References [1] Mobile SecGuide
[2] Symbolic execution on iOS with R2Frida &amp;amp; ESILSolve
[[3]([2] Symbolic execution on iOS)] Concrete execution on iOS with Angr.</description>
    </item>
    
  </channel>
</rss>
