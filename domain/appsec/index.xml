<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>appsec on Analyst</title>
    <link>https://bakerst221b.com/domain/appsec/</link>
    <description>Recent content in appsec on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Oct 2020 13:16:14 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/domain/appsec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>App Transport Security</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/mobile/ios/ios-app-transport-security/</link>
      <pubDate>Tue, 06 Oct 2020 13:16:14 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/mobile/ios/ios-app-transport-security/</guid>
      <description>In this article I&amp;rsquo;m trying to untangle a very confusing notion for some people (myself included) - App Transport Security.</description>
    </item>
    
    <item>
      <title>BTFM and RTFM iOS</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/ios-btfm-rtfm/</link>
      <pubDate>Fri, 18 Sep 2020 15:30:57 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/ios-btfm-rtfm/</guid>
      <description>This is a combination of BTFM and RTFM (Blue Team Field Manual and Red Team Field Manual) for iOS devices and applications.</description>
    </item>
    
    <item>
      <title>iOS Introduction</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/mobile/ios/ios-intro/</link>
      <pubDate>Fri, 18 Sep 2020 15:26:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/mobile/ios/ios-intro/</guid>
      <description>Low Level Security UID - key that is fused into Application processor. No one know it and can get from the device.</description>
    </item>
    
    <item>
      <title>Attacking Android</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/mobile/android/android-attacks/</link>
      <pubDate>Sun, 13 Sep 2020 20:29:15 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/mobile/android/android-attacks/</guid>
      <description>Attacking device For this attack there are several types of attacker: â€¢ MiM, i.e. a sniffer.</description>
    </item>
    
    <item>
      <title>BTFM and RTFM Android</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/android-btfm-rtfm/</link>
      <pubDate>Thu, 10 Sep 2020 14:37:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/android-btfm-rtfm/</guid>
      <description>This is a combination of BTFM and RTFM (Blue Team Field Manual and Red Team Field Manual) for Android devices and applications.</description>
    </item>
    
    <item>
      <title>IPC Attacks</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/mobile/android/android-ipc-attacks/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/mobile/android/android-ipc-attacks/</guid>
      <description>Fragment Injection  To read: https://securityintelligence.com/new-vulnerability-android-framework-fragment-injection/
 Preamble: Reflection Fragments require Reflection API. What&amp;rsquo;s that? Compare two ways of instanciating a class:</description>
    </item>
    
    <item>
      <title>Reverse Engineering Android Apps</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/mobile/android/android-debug/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/mobile/android/android-debug/</guid>
      <description>In this article I&amp;rsquo;m assembling information about debugging applications on Android, then all possible to anti-debugging techniques and how they can be curcumvented (a little spoiler here - almoust always one way ðŸ˜€) .</description>
    </item>
    
    <item>
      <title>iOS Jailbreaking</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/mobile/ios/ios-jailbreaking/</link>
      <pubDate>Fri, 18 Sep 2020 15:42:02 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/mobile/ios/ios-jailbreaking/</guid>
      <description>Types of jailbreaking  Tethered jailbreaks don&amp;rsquo;t persist through reboots, so re-applying jailbreaks requires the device to be connected (tethered) to a computer during every reboot.</description>
    </item>
    
  </channel>
</rss>
