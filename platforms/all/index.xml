<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>all on Analyst</title>
    <link>https://bakerst221b.com/platforms/all/</link>
    <description>Recent content in all on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jul 2022 15:14:39 +1000</lastBuildDate><atom:link href="https://bakerst221b.com/platforms/all/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chromesque Internals</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/browser/chromesque/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/browser/chromesque/</guid>
      <description>In the process of investigating Toy PD case, I‚Äôve realised I lack the information about different browser files.</description>
    </item>
    
    <item>
      <title>‚õîÔ∏è Access Controls</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/accounts/access-controls/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/accounts/access-controls/</guid>
      <description>DAC I am the leader! I&amp;rsquo;m the one that says when we go.
A user, who&amp;rsquo;s the owner of the file or another object defines who can and who cannot view it.</description>
    </item>
    
    <item>
      <title>üí´ System Supernova</title>
      <link>https://bakerst221b.com/docs/reverse/malware-analysis/system-supernova/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/malware-analysis/system-supernova/</guid>
      <description>&lt;p&gt;&lt;em&gt;One of the main things to know when performing forensic analysis is knowing what&amp;rsquo;s normal and what&amp;rsquo;s not. It would take ages to google every single pinch of this information, that&amp;rsquo;s why I have decided to make a clean install of several systems and capture their state to have an idea what&amp;rsquo;s good for each of them.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/accounts/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/accounts/manual/</guid>
      <description>Windows There are two main places within the registry that contains that information: SAM hive for local and Microsoft accounts and Software\Microsoft\Windows NT\CurrentVersion\ProfileList for Domain Accounts.</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/configs/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/configs/manual/</guid>
      <description>Can be hard (no consistency). Are they different by accident or from malicous intent. Baseline reference (what the settings should be).</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/console/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/console/manual/</guid>
      <description>Remote vs local commands?
Windows CMD PowerShell Windows PowerShell Event logs Operational Monitoring.
%SystemRoot%\System32\winevt\Logs\Microsoft-Windows-Powershell%Operational.evtx, ID 4103, 4104 (if Windows considers suspicious).</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/manual/</guid>
      <description>One of the most useful artifacts when properly configured and maintained, are log files. All devices keep some sort of logs, even mobile devices.</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/ram/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/ram/manual/</guid>
      <description>Memory is the best evidence, although the hardest to preserve. If you recall Frozen II &amp;ldquo;Water has memory&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/collection/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/collection/manual/</guid>
      <description>TODO: Move this to methodology.
 Each OS and system type will have a separate section (see below).</description>
    </item>
    
    <item>
      <title>Data Carving</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/carving/</link>
      <pubDate>Tue, 06 Oct 2020 09:39:12 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/carving/</guid>
      <description>&lt;p&gt;&lt;em&gt;Below are the techniques, tools and instructions regarding data recovery from various file systems and devices. Most of the below techniques apply to HDDs only. Those that are for SDDs or other flash memory devices will be specified in the last section.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GUID Partition Table</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/partiation-schemas/gpt/</link>
      <pubDate>Tue, 06 Oct 2020 09:39:12 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/partiation-schemas/gpt/</guid>
      <description>GUID is an identifier of the following format: 8-4-4-4-12. There is still a protective MBR at 0 so that Windows will not try to format the disk.</description>
    </item>
    
    <item>
      <title>Master Boot Record</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/partiation-schemas/mbr/</link>
      <pubDate>Tue, 06 Oct 2020 09:39:12 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/partiation-schemas/mbr/</guid>
      <description>Stands for Master Boot Record.
Primary partitions (bootable). Can have at most 4 bootable partitions, since it&amp;rsquo;s limited to 4 partition entries in parition table, each entry 16 bytes in length.</description>
    </item>
    
    <item>
      <title>Logs Collection</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/collection/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/collection/</guid>
      <description>macOS syslog. Since macOS Sierra (10.12, 2016) Apple has redesigned its log system. Unix logs were replaced (syslog, for example).</description>
    </item>
    
    <item>
      <title>üí¨ Slack</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/communication/slack/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/communication/slack/</guid>
      <description>These are primarily my course notes from Slacking on insider threat by Magnet Forensics. Thank you, guys, for sharing!</description>
    </item>
    
    <item>
      <title>üß∞ Acquisition Toolkit</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/collection/tools/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/collection/tools/</guid>
      <description>If this system is running, capture the memory. Should be the first task. Memory stomping issues.</description>
    </item>
    
    <item>
      <title>üìö RAM Tools Reference</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/ram/ram-tools/</link>
      <pubDate>Thu, 01 Oct 2020 13:01:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/ram/ram-tools/</guid>
      <description>Volatility # install brew packet manager ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; &amp;lt; /dev/null 2&amp;gt; /dev/null # install volatility (python should be installed) brew install volatile # vol.</description>
    </item>
    
    <item>
      <title>File Systems Overview</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/overview/</link>
      <pubDate>Sun, 18 Oct 2020 22:35:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/overview/</guid>
      <description>Name Partition size (min/max) Cluster size (min/max) File Max Size fstab code     FAT16 16Mb/2Gb 2Kb/32Kb     FAT32 32 KB (officially), 512 bytes (unofficially)- 2Tb üîç 512b - 32Kb/64Kb (for large volumes)     NTFS 1.</description>
    </item>
    
    <item>
      <title>üñ• System Information</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/system-info/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/system-info/</guid>
      <description>Windows Installed programs and applications Key üîë: Microsoft\Windows\CurrentVersion\Uninstall. There can be some data for programs that do not exist on the system anymore.</description>
    </item>
    
    <item>
      <title>üåç Geo Location</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/geo/</link>
      <pubDate>Wed, 28 Nov 2018 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/geo/</guid>
      <description>Android /data/data/com.google.android.apps.maps/databases/gmm_storage.db # User Photos /data/media/0/DCIM/Camera /data/data/com.androidproviders.media/databases/external.db /data/media/0/bluetooth /data/media/0/Download /data/media/0/Pictures/Screenshots /data/media/0/Pictures/Twitter iOS /private/var/mobile/Containers/Data/Application/[APPGUID]/Library/Maps/GeoHistory.mapsdata /private/var/mobile/Containers/Data/Application/[APPGUID]/Library/Maps/GeoBookmarks.plist /private/var/mobile/Library/Caches/com.apple.routined/Cache.sqlite /private/var/mobile/Library/Caches/com.</description>
    </item>
    
    <item>
      <title>Browser Info</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/browser/browser/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/browser/browser/</guid>
      <description>Many browsers are based on Chromium engine, that‚Äôs why they will have similar artifacts: Chrome, Opera, new Edge, Brave, Vivaldi.</description>
    </item>
    
    <item>
      <title>Web Application Attack Patterns</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/ioc/web-app-attack-patterns/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/ioc/web-app-attack-patterns/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article is an attempt to collect the most of the web attacks in one place, collect the corresponding attack patterns.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>üåé Network Traffic</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/traffic/manual/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/traffic/manual/</guid>
      <description>Open connections.
Ports idetify services (usually, but not always).
 System ports are forensically important 0-1023.</description>
    </item>
    
    <item>
      <title>üé´ Permissions and Policies</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/permissions/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/permissions/</guid>
      <description>Windows Group policies
macOS iOS Android AWS IAM - Identity and Access Management. By default - no permissions.</description>
    </item>
    
    <item>
      <title>üì¨ Mail</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/communication/mail/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/communication/mail/</guid>
      <description>General Reference Protocols. SMTP (Simple Mail Transport Protocol) and extended SMTP are used for outbound mailboxüì§ and POP3/IMAP - for inbound üì•.</description>
    </item>
    
    <item>
      <title>üñ± Devices Attached</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/devices/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/devices/</guid>
      <description>Windows Are we looking for USB storage media activity or all USB devices? Like, cameras üì∏?</description>
    </item>
    
    <item>
      <title>ü™¶ Backups</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/backup/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/backup/</guid>
      <description>Windows Volume Shadow Copies and Restore \System Volume Information\ Shadow Copies are exactly those pieces of data that get saved on disk when system restore option is enabled.</description>
    </item>
    
    <item>
      <title>üìò Manual</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/persistence/manual/</link>
      <pubDate>Thu, 01 Oct 2020 13:01:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/persistence/manual/</guid>
      <description>Approach Run a tool to collect all the artefacts for this OS (for example, autorunc.exe for Windows) on the machines in question.</description>
    </item>
    
    <item>
      <title>‚õÖÔ∏è Cloud Storage</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/cloud/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/cloud/</guid>
      <description>Windows For OneDrive the most useful artifacts are stored locally. If you get access to the account online - may see the deleted items and their versions.</description>
    </item>
    
    <item>
      <title>üéû Media Files</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/media/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/media/</guid>
      <description>Windows Recent documents Key üîë: NTUSER.DAT\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs
Contains the list of all recent documents as a bunch and also the same data sorted by extension.</description>
    </item>
    
    <item>
      <title>üìÑ Document And Folder Artefacts</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/recentaccess/win/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/recentaccess/win/</guid>
      <description>LNK There are several artifacts indicating user activity. One of them is LNK files. To analyse acquired LNK files use üõ† LECmd (E.</description>
    </item>
    
    <item>
      <title>‚è±Ô∏è Timelines And Timestamps</title>
      <link>https://bakerst221b.com/docs/dfir/timelines/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/timelines/</guid>
      <description>Time formats and Standards GMT and UTC are the same and usually are used interchangeably. Although, there is some difference: https://www.</description>
    </item>
    
    <item>
      <title>üìö OSINT Techniques</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/osint/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/osint/</guid>
      <description>&lt;p&gt;&lt;em&gt;This all about searching for the information publicly available.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>üí¨ Messaging Data</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/communication/other/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/communication/other/</guid>
      <description>Electron is a framework that is available for building applications, cross-platform. You‚Äôre creating a web-application that can be used as a desktop one (implementing both back- and frontend).</description>
    </item>
    
    <item>
      <title>üí¨‚ùóÔ∏èNotifications</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/notification/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/notification/</guid>
      <description>Windows Toast notifications on Windows 10: C:\Users\%Username%\AppData\Local\Microsoft\Windows\Notifications contains wpndatabase.db and appdb.dat. Both can be opened with üõ† SQLite Browser.</description>
    </item>
    
    <item>
      <title>üó£ Voice Assistants</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/voice/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/voice/</guid>
      <description>Windows Cortana is a great source of information. C:\Users\%Username%\AppData\Local\Packages\Microsoft.Windows.Cortana_xxxx\LocalState\ESEDatabase_CortanaCoreInstance\CortanaCoreDb.db contains user locations, reminders etc. Use a üõ† SQLite browser to see the contents, or export to cvs and work in Excel.</description>
    </item>
    
    <item>
      <title>Binary Vulnerabilities And Exploits</title>
      <link>https://bakerst221b.com/docs/reverse/exploits/bin/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/exploits/bin/</guid>
      <description>&lt;p&gt;&lt;em&gt;In this article I will collect common binary vulnerability (expept for the bufferoverflow which has its own dedicated article) &amp;hellip; .&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Firewalls</title>
      <link>https://bakerst221b.com/docs/dfir/defense/firewalls/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/defense/firewalls/</guid>
      <description>Host-based IDS look for local system configurations and behaviour, while network-based IDS look for network connections and looks for anomalies and common signatures.</description>
    </item>
    
    <item>
      <title>Other Logs</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/other/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/other/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is about &amp;hellip; .&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>üëÄ Interesting Observations</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/observations/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/observations/</guid>
      <description>&lt;p&gt;&lt;em&gt;I will be collecting some random stuff I&amp;rsquo;ve noticed about people&amp;rsquo;s usage of IT systems.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>üìà User Statistics</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/stats/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/stats/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is about &amp;hellip; .&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Diffie Hellman</title>
      <link>https://bakerst221b.com/docs/cryptography/asymmetric/deffie-hellman/</link>
      <pubDate>Mon, 16 Nov 2020 17:36:22 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/cryptography/asymmetric/deffie-hellman/</guid>
      <description>I&amp;rsquo;ve written this article while I was untanging RSA and Deffie Hellman inside my head. What I need to stree right here, in the article description, the main difference between them is the Deffie Hellman is NOT a encryption algorithm!</description>
    </item>
    
    <item>
      <title>RSA</title>
      <link>https://bakerst221b.com/docs/cryptography/asymmetric/rsa/</link>
      <pubDate>Mon, 16 Nov 2020 17:36:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/cryptography/asymmetric/rsa/</guid>
      <description>To my utter embarrassment I had to admit that I&amp;rsquo;ve recently realized I didn&amp;rsquo;t remember how the RSA worked&amp;hellip;.</description>
    </item>
    
    <item>
      <title>Partition Schemas Overview</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/partiation-schemas/overview/</link>
      <pubDate>Sun, 18 Oct 2020 22:35:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/partiation-schemas/overview/</guid>
      <description>Bootcode and Booting Process Partition tables Partitioning is the address range where the volume with a file system can sit.</description>
    </item>
    
    <item>
      <title>XFS</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/xfs/</link>
      <pubDate>Sun, 18 Oct 2020 22:35:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/xfs/</guid>
      <description>Good for multimedia files.</description>
    </item>
    
    <item>
      <title>Compilation and Linking üîó</title>
      <link>https://bakerst221b.com/docs/reverse/basics/compilation-and-linking/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:41 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/compilation-and-linking/</guid>
      <description>In this article I am trying to reasearch compilation and linking process.
Terms .cpp - is a human-readable file written in any programming language.</description>
    </item>
    
    <item>
      <title>Exceptions</title>
      <link>https://bakerst221b.com/docs/reverse/basics/exceptions/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:41 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/exceptions/</guid>
      <description>‚ö†Ô∏è Note that x64 does not use this mechanism for exception handling.
 Consider the following code:</description>
    </item>
    
    <item>
      <title>Interrupts</title>
      <link>https://bakerst221b.com/docs/reverse/basics/interrupts/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:41 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/interrupts/</guid>
      <description>Character Special Files One of the examples of a special files are:
 /dev/stdin /dev/stdout /dev/random (PRNG which may delay returning a value to acquire additional entropy.</description>
    </item>
    
    <item>
      <title>Packers and Unpacking</title>
      <link>https://bakerst221b.com/docs/reverse/basics/unpacking/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:41 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/unpacking/</guid>
      <description>References [1] Manual unpacking (rus üá∑üá∫)
[2] Unpacking FSG 2.0 (rus üá∑üá∫)
[3] Introduction to unpacking (rus üá∑üá∫)</description>
    </item>
    
    <item>
      <title>Positive and Negative Numbers</title>
      <link>https://bakerst221b.com/docs/reverse/basics/positive-and-negative-numbers/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/positive-and-negative-numbers/</guid>
      <description>Intro One&amp;rsquo;s complement Two complement </description>
    </item>
    
    <item>
      <title>Processes, threads and mutants zombie üßü‚Äç‚ôÇÔ∏è</title>
      <link>https://bakerst221b.com/docs/reverse/basics/process-thread-mutant/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/process-thread-mutant/</guid>
      <description>In this article I am describing the difference between a process, thread and mutex.
Process When and exe file or other executable file is run, some memory in RAM is allocated and the program&amp;rsquo;s code and data is read from the hard drive and written into RAM.</description>
    </item>
    
    <item>
      <title>Forged Image Detection</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/antiforensics/forged-images/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/antiforensics/forged-images/</guid>
      <description>https://29a.ch/photo-forensics/#forensic-magnifier
Images can be forged or cloned. Regions can be manipulated with. Hard to detect with naked eye.</description>
    </item>
    
    <item>
      <title>A Few Good Bits</title>
      <link>https://bakerst221b.com/docs/blog/2020/10/a-few-good-bits/</link>
      <pubDate>Sat, 10 Oct 2020 18:53:48 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2020/10/a-few-good-bits/</guid>
      <description>Saturday
I&amp;rsquo;ve recently have had a severe poisoning (I only hope it&amp;rsquo;s not the rotavirus üò®) and I&amp;rsquo;ve spent one evening and one day barely moving.</description>
    </item>
    
    <item>
      <title>Reference vs Value</title>
      <link>https://bakerst221b.com/docs/reverse/basics/reference-vs-value/</link>
      <pubDate>Mon, 05 Oct 2020 18:48:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/reference-vs-value/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>Mutable vs Immutable</title>
      <link>https://bakerst221b.com/docs/reverse/basics/mutable-vs-immutable/</link>
      <pubDate>Mon, 05 Oct 2020 18:48:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/mutable-vs-immutable/</guid>
      <description>&amp;gt;&amp;gt;&amp;gt; import ctypes &amp;gt;&amp;gt;&amp;gt; a = 5 &amp;gt;&amp;gt;&amp;gt; address = id(a) &amp;gt;&amp;gt;&amp;gt; address 4307917216 &amp;gt;&amp;gt;&amp;gt; ctypes.</description>
    </item>
    
    <item>
      <title>Evading Antivirus</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/antiforensics/antivirus/</link>
      <pubDate>Thu, 01 Oct 2020 13:01:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/antiforensics/antivirus/</guid>
      <description>Windows https://tyeyeah.github.io/2021/08/02/2021-08-02-Bypass-Anti-Virus/
macOS Linux </description>
    </item>
    
    <item>
      <title>Hiding Data</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/antiforensics/fs-hiding-data/</link>
      <pubDate>Thu, 01 Oct 2020 13:01:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/antiforensics/fs-hiding-data/</guid>
      <description>Alternative data stream Alternate data streams. Specific for Windows. See more here. Are there such streams for other OS?</description>
    </item>
    
    <item>
      <title>Turning Off Logging</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/antiforensics/logs-turnoff/</link>
      <pubDate>Thu, 01 Oct 2020 13:01:35 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/antiforensics/logs-turnoff/</guid>
      <description>macOS From Apple&amp;rsquo;s official documentation:
 In some cases, the contents of a volume are sufficiently secret that it is not appropriate to log them.</description>
    </item>
    
    <item>
      <title>Flash Memory Overview</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/ssd/</link>
      <pubDate>Mon, 28 Sep 2020 13:23:24 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/ssd/</guid>
      <description>In this article I&amp;rsquo;m going to give a general overview of how SSD works and how it&amp;rsquo;s different from an HDD.</description>
    </item>
    
    <item>
      <title>HDD Overview</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/hdd/</link>
      <pubDate>Mon, 28 Sep 2020 13:23:24 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/hdd/</guid>
      <description>In this article I&amp;rsquo;m going to give a general overview of how HDDs work.
Floppy Floppy disks üíæ are like dinosaurs ü¶ï.</description>
    </item>
    
    <item>
      <title>Buffer Overflow</title>
      <link>https://bakerst221b.com/docs/reverse/exploits/bufferoverflow/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/exploits/bufferoverflow/</guid>
      <description>The idea of a buffer overflow attack is quite simple, though the implementation might be difficult to digest at first.</description>
    </item>
    
    <item>
      <title>Exploit Development</title>
      <link>https://bakerst221b.com/docs/reverse/exploits/dev/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/exploits/dev/</guid>
      <description>Process Steps Overview  Fuzz and fins unusual behaviour Detect any possibility to overwrite crucial parts:  EIP SEH Acces violations/invalid memory addresses etc   Hijack Execution Eliminate bad characters Write PoC, spawning a reverse or bind shell, RAT or move to other systems.</description>
    </item>
    
    <item>
      <title>C Program Memory Layout</title>
      <link>https://bakerst221b.com/docs/reverse/basics/c-prog-memory-layout/</link>
      <pubDate>Sun, 27 Sep 2020 12:16:50 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/c-prog-memory-layout/</guid>
      <description>Intro At the very beginning of my career I found it hard to grasp the notion of memory layout and stack.</description>
    </item>
    
    <item>
      <title>Cracking üî®</title>
      <link>https://bakerst221b.com/docs/reverse/basics/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/crack-me-algo/</guid>
      <description>&lt;p&gt;&lt;em&gt;Any cracking career is supposed to start with solving simple crackme&amp;rsquo;s. I&amp;rsquo;ve not been doing it all the time, but I&amp;rsquo;ve solved several of them from the simplest to a very hard one which required some math knowledge üò¨. This allowed me to craft some sort of algorithm I would like to share.&amp;quot;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>From Src to Binary</title>
      <link>https://bakerst221b.com/docs/reverse/basics/from-src-to-binary/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/from-src-to-binary/</guid>
      <description>To read
https://www.airs.com/blog/archives/38</description>
    </item>
    
    <item>
      <title>üßëüèª‚Äçüî¨ Malware Development</title>
      <link>https://bakerst221b.com/docs/reverse/malware/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/malware/</guid>
      <description>Python Windows https://www.apriorit.com/dev-blog/727-win-guide-to-hooking-windows-apis-with-python
macOS https://medium.com/hackernoon/writing-an-keylogger-for-macos-in-python-24adfa22722
https://stackoverflow.com/questions/61077760/python3-keylogger-for-macos-script-not-working
References </description>
    </item>
    
    <item>
      <title>USBKill Switch</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/antiforensics/usbkill-switch/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/antiforensics/usbkill-switch/</guid>
      <description>A software that could be used for anti-forensics. By default, configs are at /etc and named usbkill.</description>
    </item>
    
    <item>
      <title>üí± Symbolic and Concrete Execution</title>
      <link>https://bakerst221b.com/docs/reverse/binary-analysis/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/binary-analysis/</guid>
      <description>References  Expand&amp;hellip; [1] Mobile Sec Guide
[2] Symbolic execution on iOS with R2Frida &amp;amp; ESILSolve</description>
    </item>
    
  </channel>
</rss>
