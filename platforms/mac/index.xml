<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mac on Analyst</title>
    <link>https://bakerst221b.com/platforms/mac/</link>
    <description>Recent content in mac on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Apr 2021 17:18:04 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/platforms/mac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apple Platform Security</title>
      <link>https://bakerst221b.com/docs/reference/apple/apple-security/</link>
      <pubDate>Thu, 17 Sep 2020 12:18:10 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/apple-security/</guid>
      <description>Applications or even OS itself doesn&amp;rsquo;t know the keys that are protected by Secure Enclave. OS only sees Keychain, but the Security Enclave is separated.</description>
    </item>
    
    <item>
      <title>Apple Mach-O File</title>
      <link>https://bakerst221b.com/docs/reverse/executables/apple-mach-o-file/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/executables/apple-mach-o-file/</guid>
      <description>Intro Using otool we can get general info about the Mach-O file:
otool -h [app_name] &amp;gt; Mach header magic cputype cpusubtype caps filetype ncmds sizeofcmds flags 0xfeedfacf 16777228 0 0x00 2 115 11384 0x00218085 Quick refernce on the meaning:</description>
    </item>
    
    <item>
      <title>FSEvents</title>
      <link>https://bakerst221b.com/docs/reference/apple/apple-fsevents/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/apple-fsevents/</guid>
      <description>Intro Directory events only 10.5-10.6. File events since 10.7. Each record is assigned a name which is constucted the following way: hex(last_event_id + 1).</description>
    </item>
    
    <item>
      <title>MacOS Basics</title>
      <link>https://bakerst221b.com/docs/reference/apple/macos-fundamentals/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/macos-fundamentals/</guid>
      <description>Firewall You can set specific rules to limit the traffic.
FireVault No recovery once this password is lost.</description>
    </item>
    
    <item>
      <title>To Carry Out MockInv&#39;estigation. Part 1</title>
      <link>https://bakerst221b.com/docs/blog/2021/06/toy-story-pd/</link>
      <pubDate>Sun, 25 Apr 2021 17:18:04 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/06/toy-story-pd/</guid>
      <description>‚ùóSPOILER ALERT!
üìÜ 16/06/2021 , Wednesday
üï∞ 09:21 PM.
It was a very sunny day and a very nice a long walk that my daughter and I had before lunch.</description>
    </item>
    
    <item>
      <title>How I Got Started With ARM</title>
      <link>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-arm/</link>
      <pubDate>Sun, 07 Mar 2021 11:42:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-arm/</guid>
      <description>üìÜ Friday, 12th of March, 202
‚è∞ 09:00
‚òÄÔ∏è It was a very deceptively sunny morning, children laughing and squeaking merrily.</description>
    </item>
    
    <item>
      <title>How I Got Started With AWS</title>
      <link>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-aws/</link>
      <pubDate>Sun, 07 Mar 2021 11:42:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-aws/</guid>
      <description>In this blog post I am exploring AWS services (EC2). I am currently using a Free Tier license and I am trying to learn how to use.</description>
    </item>
    
    <item>
      <title>How I Have Built My Lab</title>
      <link>https://bakerst221b.com/docs/blog/2021/03/how-i-have-built-my-lab/</link>
      <pubDate>Mon, 01 Mar 2021 22:14:08 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/03/how-i-have-built-my-lab/</guid>
      <description>One late evening when my eyes were so difficult to keep open, I&amp;rsquo;ve decided to setup a Windows Lab on my M1 Mac.</description>
    </item>
    
    <item>
      <title>Positive and Negative Numbers</title>
      <link>https://bakerst221b.com/docs/reverse/basics/positive-and-negative-numbers/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/positive-and-negative-numbers/</guid>
      <description>Intro One&amp;rsquo;s complement Two complement </description>
    </item>
    
    <item>
      <title>Linux Artifacts</title>
      <link>https://bakerst221b.com/docs/reference/linux/linux-artifacts/</link>
      <pubDate>Mon, 05 Oct 2020 10:31:08 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/linux/linux-artifacts/</guid>
      <description>User Data /home/$USER - user data and configs
Password hashes etc/passwd etc/shadow Notifications Configurations /etc[%SystemRoot%]/System32/config - contains separate configs for each application</description>
    </item>
    
    <item>
      <title>Mac Artifacts</title>
      <link>https://bakerst221b.com/docs/reference/apple/mac-artifacts/</link>
      <pubDate>Mon, 05 Oct 2020 10:31:08 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/mac-artifacts/</guid>
      <description>User Data /Users/%username%/ Password hashes sudo plutil -p /var/db/dslocal/nodes/Default/users/&amp;lt;usename&amp;gt;.plist Account Info sudo plutil -p /private/var/db/dslocal/nodes/Default/Users/&amp;lt;User&amp;gt;.plist Contains name, profile name, password hint, account image, UID</description>
    </item>
    
    <item>
      <title>Mac Setup Script</title>
      <link>https://bakerst221b.com/docs/toolkit/toolsdb/mac-setup-script/</link>
      <pubDate>Wed, 30 Sep 2020 18:33:56 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/toolsdb/mac-setup-script/</guid>
      <description># oh my zsh bash themes sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; # sh -c &amp;#34;$(fetch -o - https://raw.</description>
    </item>
    
    <item>
      <title>macOS Core Processes</title>
      <link>https://bakerst221b.com/docs/reference/apple/mac-core/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/mac-core/</guid>
      <description>&lt;p&gt;&lt;em&gt;There are two broad categories of core processes. Processes that initialize system environment and those that initialize the user environment. Whatever is the category, you need to know them well in order to detect abnormal things.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/net-btfm/</link>
      <pubDate>Mon, 28 Sep 2020 12:21:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/net-btfm/</guid>
      <description>dshell # MacOSX path to directory with pyenv (example): /Users/[user_name]/.pyenv/versions/3.8.5/envs/python3/lib/python3.8/site-packages/dshell/ decode -l # list decoders decode -d [decoder_name] # decoder info # who talked to whom decode -d ip [capture_file_name].</description>
    </item>
    
    <item>
      <title>Calling ü§ô Conventions in x86</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-calling-conventions/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-calling-conventions/</guid>
      <description>In this article I&amp;rsquo;m giving an overview of different calling conventions with examples.
Intro Consider the following code snippet:</description>
    </item>
    
    <item>
      <title>Flags</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-flags/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-flags/</guid>
      <description>CF Its full name is carry flag. Its main purpose is to tell that the resulting number after some operations is too much to bear for the registry size.</description>
    </item>
    
    <item>
      <title>Operations</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-operations/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-operations/</guid>
      <description>In this article I&amp;rsquo;m describing all assembly operations that I&amp;rsquo;ve encountered myseld and also wasn&amp;rsquo;t lazy anough to put down an explanation about here.</description>
    </item>
    
    <item>
      <title>Registers</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-registers/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-registers/</guid>
      <description>EAX EIP EBP RSI/ESI Source Index.
RSI - 64 bit, ESI - 32.
RDI/EDI Destination Index.</description>
    </item>
    
    <item>
      <title>Crackme Algorithm</title>
      <link>https://bakerst221b.com/docs/reverse/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/crack-me-algo/</guid>
      <description>Look at the strings fs strings and f in radare2 or rabin -zz Find xrefs for the strings of interest axt @ str.</description>
    </item>
    
    <item>
      <title>From Src to Binary</title>
      <link>https://bakerst221b.com/docs/reverse/basics/from-src-to-binary/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/from-src-to-binary/</guid>
      <description>To read
https://www.airs.com/blog/archives/38</description>
    </item>
    
    <item>
      <title>Assembly Cheatsheet</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-cheatsheet/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:54 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-cheatsheet/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>ARM Assembly</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-arm/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-arm/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>Assembly Intro</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-intro/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-intro/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>How I Met Radare2</title>
      <link>https://bakerst221b.com/docs/blog/2020/09/how-i-met-radare2/</link>
      <pubDate>Thu, 24 Sep 2020 10:40:07 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2020/09/how-i-met-radare2/</guid>
      <description>üìÜ 24/09/2020, Wednesday
üï∞ 7:00 What a nice morning! And it&amp;rsquo;s so great to be woken up by a high-pitched cry in the ear&amp;hellip; Well, after giving my daughter her breakfast and doing all the neccessary hygine procedures for us both, I left her by my side on the development carpet, so that I could develop myself&amp;hellip;</description>
    </item>
    
    <item>
      <title>BTFM for Reverse Engineering</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/reverse-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/reverse-btfm/</guid>
      <description>Rabin2 rabin2 -I [progname] # main info about the prog rabin2 -z [progname] # the strings from the binary&amp;#39;s data section rabin2 -zz [progname] # all strings from the binary rabin2 -zqq [progname] # strings only without additional info rabin2 -x iGoat-Swift # thin the binary R2 r2 [progname] # launch radare2  &amp;gt; s main # seak main function and go to it &amp;gt; aa # find all strings &amp;gt; v # psedu GUI mode (Hex editor) &amp;gt; VV # graph mode &amp;gt; afvn user_input input # rename local var and all the places it was referenced # rename function &amp;gt; s function_old_name &amp;gt; afn function_new_name &amp;gt; c # show cursor in visual mode &amp;gt; afvd # print all local variables &amp;gt; u # back?</description>
    </item>
    
    <item>
      <title>macOS BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/mac-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/mac-btfm/</guid>
      <description>python FSEParser_V3.3.py -s -t folder /.fseventsd -o /Users/sentinel/Desktop/FSEvents_Out References </description>
    </item>
    
    <item>
      <title>Mobile Toolkit</title>
      <link>https://bakerst221b.com/docs/toolkit/toolsdb/mobile-toolkit/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/toolsdb/mobile-toolkit/</guid>
      <description>Debuggers gdb radare2 Other  IDA Pro [Hopper Disassembler](/docs/toolkit/general/reverse-toolkit/#hopper disassembler)  Static code analysis IDA Pro Hopper Disassembler radare2 Utilities Activity Analysis Jailbreaking/Rooting Something Desciption</description>
    </item>
    
    <item>
      <title>Mac Imaging</title>
      <link>https://bakerst221b.com/docs/reference/apple/mac-acquisition/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/mac-acquisition/</guid>
      <description>I&amp;rsquo;ve recently listened to DFSP podcast in which Steve Wahlen talked about different caveats in Mac forensics.</description>
    </item>
    
    <item>
      <title>ToDO</title>
      <link>https://bakerst221b.com/docs/reference/mobile/ios-todo/</link>
      <pubDate>Sun, 20 Sep 2020 12:28:52 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/mobile/ios-todo/</guid>
      <description>https://www.youtube.com/watch?v=bmJSWrVuIVQ
https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06h-testing-platform-interaction
cycript
#todo*: https://developer.apple.com/documentation/network/implementing_netcat_with_network_framework
 </description>
    </item>
    
    <item>
      <title>iOS Keychain</title>
      <link>https://bakerst221b.com/docs/reference/apple/apple-keychain/</link>
      <pubDate>Fri, 02 Oct 2020 11:38:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/apple/apple-keychain/</guid>
      <description>In this article I&amp;rsquo;m trying to study how keychain works.
Metaphor There once lived a monkey üêí George.</description>
    </item>
    
  </channel>
</rss>
