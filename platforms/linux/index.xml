<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Analyst</title>
    <link>https://bakerst221b.com/platforms/linux/</link>
    <description>Recent content in linux on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jul 2022 15:14:39 +1000</lastBuildDate><atom:link href="https://bakerst221b.com/platforms/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üêß Linux Evidence Collection</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/manuals/collection/linux/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/manuals/collection/linux/</guid>
      <description>File Systems EXT 2,3,4, ReiserFS, XFS, JFS, Btrfs.
Logical Backup - doesn&amp;rsquo;t copy all, doesn&amp;rsquo;t copy slack, free space and deleted files.</description>
    </item>
    
    <item>
      <title>üßº Media Sterilisation</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/manuals/collection/sterilisation/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/manuals/collection/sterilisation/</guid>
      <description>Before copying evidence or making a disk image one needs to sterelise the target media to make sure that data that was present on that disk prior to this operation would not meddle with the evidence data.</description>
    </item>
    
    <item>
      <title>UNIX Console</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/console/unix/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/console/unix/</guid>
      <description>Bash On most Linux machines bash is the default shell interpereter. Each user has a separate bash history.</description>
    </item>
    
    <item>
      <title>WiFi Attacks</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/network/attack-patterns/wifi-attacks/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/network/attack-patterns/wifi-attacks/</guid>
      <description> B.¬†By launching Max Age attack C.¬†Route table poisoning D.¬†By launching Sequence++ attack </description>
    </item>
    
    <item>
      <title>Host-based IDP/IPS</title>
      <link>https://bakerst221b.com/docs/dfir/defense/host/ids-ips/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/defense/host/ids-ips/</guid>
      <description>&lt;p&gt;Host-based IDS look for local system configurations and behaviour, while network-based IDS look for network connections and looks for anomalies and common signatures.&lt;/p&gt;
&lt;p&gt;IDS and IPS as firewall&amp;rsquo;s filters. There are Control Plane (looks after the OS and routing table) and the Forwarding Plane (makes decisions on routing and discarding). If something happens to the Control Plane, the device will still forward the traffic (really???).&lt;/p&gt;
&lt;p&gt;By default IDS only &lt;strong&gt;listens üëÇ&lt;/strong&gt; the traffic. It&amp;rsquo;s usually connected to the span port on a switch. Looks for anomalies and sends alerts. Won&amp;rsquo;t take any actions by default, but can be configured in such a way. If the IDS is down, nothing is changed for the rest of the network, it&amp;rsquo;s still operating.&lt;/p&gt;
&lt;p&gt;IPS takes actions on its own. It is not connected to the span port, but rather is a gateway. Before it inspects and allows a packet through, nothing can move forward. So, if IPS is down, everyone is down (unless there is some load balancing enabled or may be some policy for such cases). Positioned right after the router, edge device or a firewall.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Network-based</title>
      <link>https://bakerst221b.com/docs/dfir/defense/network/</link>
      <pubDate>Thu, 28 Jul 2022 15:14:39 +1000</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/defense/network/</guid>
      <description>A network-based IDS usually monitors the network, logs it and alerts the admin if something catches its eye.</description>
    </item>
    
    <item>
      <title>ExtX</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/extx/</link>
      <pubDate>Sun, 18 Oct 2020 22:35:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/extx/</guid>
      <description>2 No journaling
3 Same but + journaling
4 New FS</description>
    </item>
    
    <item>
      <title>FAT</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/fat/</link>
      <pubDate>Sun, 18 Oct 2020 22:35:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/fat/</guid>
      <description>Any FAT partition has two main parts: system area and data area. System area contains FAT boot record (every file system has a boot record), 1st FAT and 2nd FAT.</description>
    </item>
    
    <item>
      <title>ReiserFS</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/reiser/</link>
      <pubDate>Sun, 18 Oct 2020 22:35:40 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/data-recovery/file-systems/reiser/</guid>
      <description>Allows storing multiple files in a single sector. exclamation mark ‚ùóÔ∏èUnique to this FS!</description>
    </item>
    
    <item>
      <title>Linux Logs</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/linux/</link>
      <pubDate>Mon, 12 Oct 2020 17:50:01 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/logs/linux/</guid>
      <description>System &amp;amp; Application Logs Path üõ£: /var/log/* List of the logs and what they are about:</description>
    </item>
    
    <item>
      <title>Linux Scheduled Tasks</title>
      <link>https://bakerst221b.com/docs/reverse/malware-analysis/persistence/tasks/linux/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/malware-analysis/persistence/tasks/linux/</guid>
      <description>Scheduled Tasks
‚Ä¢ /etc/cron*
‚Ä¢ /var/spool/crontabs ‚Ä¢ /var/spool/atjobs
‚Ä¢ /etc/anacron</description>
    </item>
    
    <item>
      <title>Linux Startup Locations and Mechanisms</title>
      <link>https://bakerst221b.com/docs/reverse/malware-analysis/persistence/startup/linux/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/malware-analysis/persistence/startup/linux/</guid>
      <description>Startup Items ‚Ä¢ /etc/systemd/system
‚Ä¢ /usr/lib/systemd/system ‚Ä¢ /etc/init*</description>
    </item>
    
    <item>
      <title>Calling ü§ô Conventions in x86</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-calling-conventions/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-calling-conventions/</guid>
      <description>In this article I&amp;rsquo;m giving an overview of different calling conventions with examples.
Intro Consider the following code snippet:</description>
    </item>
    
    <item>
      <title>Flags</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-flags/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-flags/</guid>
      <description>CF Its full name is carry flag. Its main purpose is to tell that the resulting number after some operations is too much to bear for the registry size.</description>
    </item>
    
    <item>
      <title>Operations</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-operations/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-operations/</guid>
      <description>In this article I&amp;rsquo;m describing all assembly operations that I&amp;rsquo;ve encountered myseld and also wasn&amp;rsquo;t lazy anough to put down an explanation about here.</description>
    </item>
    
    <item>
      <title>Registers</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-registers/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-registers/</guid>
      <description>EAX EIP EBP RSI/ESI Source Index.
RSI - 64 bit, ESI - 32.
RDI/EDI Destination Index.</description>
    </item>
    
    <item>
      <title>Crackme Algorithm</title>
      <link>https://bakerst221b.com/docs/reverse/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/crack-me-algo/</guid>
      <description>Look at the strings fs strings and f in radare2 or rabin -zz Find xrefs for the strings of interest axt @ str.</description>
    </item>
    
    <item>
      <title>Assembly Cheatsheet</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-cheatsheet/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:54 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-cheatsheet/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>ARM Assembly</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-arm/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-arm/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>Assembly Intro</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-intro/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-intro/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>üìò Linux BTFM</title>
      <link>https://bakerst221b.com/docs/reference/linux/unix-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/linux/unix-btfm/</guid>
      <description>Variables # no spaces when assigning $0 # the first arg # array array=(1 2 4 5) ${array[0]} ${array[*]} # all items delimited by IFS ${array[@]} # all items ${!</description>
    </item>
    
    <item>
      <title>üìò SIFT BTFM</title>
      <link>https://bakerst221b.com/docs/reference/linux/sift-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/linux/sift-btfm/</guid>
      <description>Here is the official cheatsheet from SANS. I&amp;rsquo;ve copied it here for convenience. I will comment some of them after I try each command in the list.</description>
    </item>
    
    <item>
      <title>üß∞ Mobile Toolkit</title>
      <link>https://bakerst221b.com/docs/reference/mobile/mobile-toolkit/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/mobile/mobile-toolkit/</guid>
      <description>Debuggers gdb radare2 Other IDA Pro [Hopper Disassembler](/docs/toolkit/general/reverse-toolkit/#hopper disassembler) Static code analysis IDA Pro Hopper Disassembler radare2 Utilities Activity Analysis Jailbreaking/Rooting Something Desciption</description>
    </item>
    
    <item>
      <title>Case 1. IP Theft Linux Investigation</title>
      <link>https://bakerst221b.com/docs/dfir/cases/forensic-cases/case2/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/cases/forensic-cases/case2/</guid>
      <description>Nearly all IP (intellectual property) are recreated by a competitor. Investigate the development machine</description>
    </item>
    
    <item>
      <title>Case 3. Yet Another Linux Investigation</title>
      <link>https://bakerst221b.com/docs/dfir/cases/forensic-cases/case3/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/cases/forensic-cases/case3/</guid>
      <description>Running netstat, see the weird python script with established connection to some remote host: Grab the executable: lsof -p 2082 and ps aux grep 2082.</description>
    </item>
    
    <item>
      <title>Case 4. Compromised Apache Server</title>
      <link>https://bakerst221b.com/docs/dfir/cases/forensic-cases/case4/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/cases/forensic-cases/case4/</guid>
      <description>Compromised Apache Web server with drupal application used for local team. There was some unusual activity noticed between 05/10 and 08/10/19.</description>
    </item>
    
    <item>
      <title>Linux Authentication</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/accounts/linux-auth/</link>
      <pubDate>Wed, 09 Sep 2020 19:28:46 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/accounts/linux-auth/</guid>
      <description>User Account/Data
‚Ä¢ /home/%username%/* ‚Ä¢ /etc/passwd
‚Ä¢ /etc/shadow
‚Ä¢ /etc/sudoers
‚Ä¢ /etc/group
Effective ID vs Real ID</description>
    </item>
    
    <item>
      <title>Linux Config</title>
      <link>https://bakerst221b.com/docs/dfir/investigation/artefacts/configs/linux/</link>
      <pubDate>Fri, 02 Oct 2020 11:38:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/investigation/artefacts/configs/linux/</guid>
      <description>Linux SSH Files /home/%username%/.ssh/authorized_keys /home/%username%/.ssh/known_hosts
/home/%username%/.ssh/config
/home/%username%/.ssh/id_* (defualt) and just /home/%username%/.ssh/ for all the keys</description>
    </item>
    
    <item>
      <title>üìö Linux OS Primer</title>
      <link>https://bakerst221b.com/docs/reference/linux/linux-overview/</link>
      <pubDate>Mon, 08 Jun 2020 09:49:24 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reference/linux/linux-overview/</guid>
      <description>System Boot Init is the process that spawns other processes and usually has pid 1. /etc/inittab can be used to set run level for the systems.</description>
    </item>
    
    <item>
      <title>How I Met Hugo</title>
      <link>https://bakerst221b.com/docs/blog/2020/09/how-i-met-hugo/</link>
      <pubDate>Wed, 09 Sep 2020 13:45:07 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2020/09/how-i-met-hugo/</guid>
      <description>There was a time when I was desperately trying to become a web programmer (those wonderful days of na√Øve curiosityü§¶‚Äç‚ôÄÔ∏è).</description>
    </item>
    
  </channel>
</rss>
