<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ios on Analyst</title>
    <link>https://bakerst221b.com/platforms/ios/</link>
    <description>Recent content in ios on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Mar 2021 11:42:21 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/platforms/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apple Encryption</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-encryption/</link>
      <pubDate>Thu, 17 Sep 2020 12:18:10 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-encryption/</guid>
      <description>Applications or even OS itself doesn&amp;rsquo;t know the keys that are protected by Secure Enclave. OS only sees Keychain, but the Security Enclave is separated.</description>
    </item>
    
    <item>
      <title>Apple Mach-O File</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-mach-o-file/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-mach-o-file/</guid>
      <description>Intro Using otool we can get general info about the Mach-O file:
otool -h [app_name] &amp;gt; Mach header magic cputype cpusubtype caps filetype ncmds sizeofcmds flags 0xfeedfacf 16777228 0 0x00 2 115 11384 0x00218085 Quick refernce on the meaning:</description>
    </item>
    
    <item>
      <title>MacOS Fundamentals</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-fundamentals/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-fundamentals/</guid>
      <description>Firewall You can set specific rules to limit the traffic.
FireVault No recovery once this password is lost.</description>
    </item>
    
    <item>
      <title>Mobile Forensic Analysis</title>
      <link>https://bakerst221b.com/docs/articles/forensics/analysis/mobile-analysis-plan/</link>
      <pubDate>Tue, 06 Oct 2020 09:39:12 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/analysis/mobile-analysis-plan/</guid>
      <description>Tool leveling pyramid The methods are placed in the order from the easiest to the hardest and most time-consuming:</description>
    </item>
    
    <item>
      <title>How I Got Started With ARM</title>
      <link>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-arm/</link>
      <pubDate>Sun, 07 Mar 2021 11:42:21 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/blog/2021/03/how-i-got-started-with-arm/</guid>
      <description>üìÜ Friday, 12th of March, 202
‚è∞ 09:00
‚òÄÔ∏è It was a very deceptively sunny morning, children laughing and squeaking merrily.</description>
    </item>
    
    <item>
      <title>Positive and Negative Numbers</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/positive-and-negative-numbers/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/positive-and-negative-numbers/</guid>
      <description>Intro One&amp;rsquo;s complement Two complement </description>
    </item>
    
    <item>
      <title>Ios Reverse</title>
      <link>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/ios-reverse/</link>
      <pubDate>Fri, 09 Oct 2020 10:31:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/ios-reverse/</guid>
      <description>During forensic analysis it&amp;rsquo;s not too rare to run into some suspicious application. In this article I&amp;rsquo;m going to learn to reverse engineer iOS applications.</description>
    </item>
    
    <item>
      <title>Ios Reverse</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/ios-reverse/</link>
      <pubDate>Fri, 09 Oct 2020 10:31:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/ios-reverse/</guid>
      <description>During forensic analysis it&amp;rsquo;s not too rare to run into some suspicious application. In this article I&amp;rsquo;m going to learn to reverse engineer iOS applications.</description>
    </item>
    
    <item>
      <title>App Transport Security</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-app-transport-security/</link>
      <pubDate>Tue, 06 Oct 2020 13:16:14 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-app-transport-security/</guid>
      <description>In this article I&amp;rsquo;m trying to untangle a very confusing notion for some people (myself included) - App Transport Security.</description>
    </item>
    
    <item>
      <title>Apple LAContext vs User Presence</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-lacontext-vs-user-presence/</link>
      <pubDate>Mon, 05 Oct 2020 18:44:15 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-lacontext-vs-user-presence/</guid>
      <description>In this article I&amp;rsquo;n going to research this: how LAContext is different from User Presence, in what way it&amp;rsquo;s better.</description>
    </item>
    
    <item>
      <title>Frida Crash Course</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/frida-crash-course/</link>
      <pubDate>Mon, 05 Oct 2020 10:31:08 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/frida-crash-course/</guid>
      <description>Intro Frida is cool
Templates Empty If a method needs an argument of type Context, getApplicationContext() needs to be used.</description>
    </item>
    
    <item>
      <title>iOS Artifacts</title>
      <link>https://bakerst221b.com/docs/articles/forensics/artifactsdb/ios-artifacts/</link>
      <pubDate>Mon, 05 Oct 2020 10:31:08 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/artifactsdb/ios-artifacts/</guid>
      <description>About iOS logs here.
Logs Syslog According to Apple docs, NSLog now doesn&amp;rsquo;t write to syslog, therefore I didn&amp;rsquo;t find a syslog.</description>
    </item>
    
    <item>
      <title>Ios Decrypting Applications Overview</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-decrypting-applications/</link>
      <pubDate>Thu, 01 Oct 2020 13:28:49 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-decrypting-applications/</guid>
      <description>There are several tools available that perform decryption of iOS applications. iOS applications that are downloaded from AppStore are encrypted.</description>
    </item>
    
    <item>
      <title>Ios Decrypting Applications Overview</title>
      <link>https://bakerst221b.com/docs/toolkit/toolsdb/ios-decrypting-applications/</link>
      <pubDate>Thu, 01 Oct 2020 13:28:49 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/toolsdb/ios-decrypting-applications/</guid>
      <description>There are several tools available that perform decryption of iOS applications. iOS applications that are downloaded from AppStore are encrypted.</description>
    </item>
    
    <item>
      <title>Mac Setup Script</title>
      <link>https://bakerst221b.com/docs/toolkit/toolsdb/mac-setup-script/</link>
      <pubDate>Wed, 30 Sep 2020 18:33:56 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/toolsdb/mac-setup-script/</guid>
      <description># oh my zsh bash themes sh -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; # sh -c &amp;#34;$(fetch -o - https://raw.</description>
    </item>
    
    <item>
      <title>Ios Loggs</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-logs/</link>
      <pubDate>Mon, 28 Sep 2020 17:32:36 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-logs/</guid>
      <description>About iOS logs here.
Syslog According to Apple docs, NSLog now doesn&amp;rsquo;t write to syslog, therefore I didn&amp;rsquo;t find a syslog.</description>
    </item>
    
    <item>
      <title>BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/net-btfm/</link>
      <pubDate>Mon, 28 Sep 2020 12:21:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/net-btfm/</guid>
      <description>dshell # MacOSX path to directory with pyenv (example): /Users/[user_name]/.pyenv/versions/3.8.5/envs/python3/lib/python3.8/site-packages/dshell/ decode -l # list decoders decode -d [decoder_name] # decoder info # who talked to whom decode -d ip [capture_file_name].</description>
    </item>
    
    <item>
      <title>Alloc8</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/exploits/alloc8/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/exploits/alloc8/</guid>
      <description>So, there are some prerequisites that one needs to have in order to get this exploit.</description>
    </item>
    
    <item>
      <title>Calling Conventions in x86</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-calling-conventions/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-calling-conventions/</guid>
      <description>In this article I&amp;rsquo;m giving an overview of different calling conventions with examples.
Intro Consider the following code snippet:</description>
    </item>
    
    <item>
      <title>Checkm8</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/exploits/checkm8/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/exploits/checkm8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dynamic Analysis</title>
      <link>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/dynamic/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/dynamic/</guid>
      <description>This is more about cracking.
Cracking lab presents&amp;hellip;. . Staring: üåü
Tools üß∞: OllyDbg as a debugger, Import Reconstructors as an &amp;hellip; wait for it &amp;hellip;.</description>
    </item>
    
    <item>
      <title>Dynamic Analysis</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/dynamic/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/dynamic/</guid>
      <description>This is more about cracking.
Cracking lab presents&amp;hellip;. . Staring: üåü
Tools üß∞: OllyDbg as a debugger, Import Reconstructors as an &amp;hellip; wait for it &amp;hellip;.</description>
    </item>
    
    <item>
      <title>Flags</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-flags/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-flags/</guid>
      <description>CF ZF OF </description>
    </item>
    
    <item>
      <title>Operations</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-operations/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-operations/</guid>
      <description>In this article I&amp;rsquo;m describing all assembly operations that I&amp;rsquo;ve encountered myseld and also wasn&amp;rsquo;t lazy anough to put down an explanation about here.</description>
    </item>
    
    <item>
      <title>Registers</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-registers/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-registers/</guid>
      <description>EAX EIP EBP RSI/ESI Source Index.
RSI - 64 bit, ESI - 32.
RDI/EDI Destination Index.</description>
    </item>
    
    <item>
      <title>Static Analysis</title>
      <link>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/static/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/static/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Static Analysis</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/static/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/static/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Crackme Algorithm</title>
      <link>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/analysis/reversing/crack-me-algo/</guid>
      <description>Look at the strings fs strings and f in radare2 or rabin -zz Find xrefs for the strings of interest axt @ str.</description>
    </item>
    
    <item>
      <title>Crackme Algorithm</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/crack-me-algo/</guid>
      <description>Look at the strings fs strings and f in radare2 or rabin -zz Find xrefs for the strings of interest axt @ str.</description>
    </item>
    
    <item>
      <title>From Src to Binary</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/from-src-to-binary/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/from-src-to-binary/</guid>
      <description>To read
https://www.airs.com/blog/archives/38</description>
    </item>
    
    <item>
      <title>Assembly Cheatsheet</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-cheatsheet/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:54 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-cheatsheet/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>ARM Assembly</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-arm/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-arm/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>Assembly Intro</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-intro/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/code/assebly/assembly-intro/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>BTFM for Reverse Engineering</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/reverse-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/reverse-btfm/</guid>
      <description>Rabin2 rabin2 -I [progname] # main info about the prog rabin2 -z [progname] # the strings from the binary&amp;#39;s data section rabin2 -zz [progname] # all strings from the binary rabin2 -zqq [progname] # strings only without additional info rabin2 -x iGoat-Swift # thin the binary R2 r2 [progname] # launch radare2  &amp;gt; s main # seak main function and go to it &amp;gt; aa # find all strings &amp;gt; v # psedu GUI mode (Hex editor) &amp;gt; VV # graph mode &amp;gt; afvn user_input input # rename local var and all the places it was referenced # rename function &amp;gt; s function_old_name &amp;gt; afn function_new_name &amp;gt; c # show cursor in visual mode &amp;gt; afvd # print all local variables &amp;gt; u # back?</description>
    </item>
    
    <item>
      <title>Mobile Toolkit</title>
      <link>https://bakerst221b.com/docs/toolkit/toolsdb/mobile-toolkit/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/toolsdb/mobile-toolkit/</guid>
      <description>Debuggers gdb radare2 Other  IDA Pro [Hopper Disassembler](/docs/toolkit/general/reverse-toolkit/#hopper disassembler)  Static code analysis IDA Pro Hopper Disassembler radare2 Utilities Activity Analysis Jailbreaking/Rooting Something Desciption</description>
    </item>
    
    <item>
      <title>Mobile Acquisition Methods</title>
      <link>https://bakerst221b.com/docs/articles/forensics/acquisition/mobile-acquisition-methods/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/acquisition/mobile-acquisition-methods/</guid>
      <description>In this article I&amp;rsquo;m studying different acquisition methods, tool available for each, pros and cons of each tool as well.</description>
    </item>
    
    <item>
      <title>Mobile Device Characteristics</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/general/mobile-device-characteristics/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/general/mobile-device-characteristics/</guid>
      <description>Mobile devices consist of the following parts:
 Microprocessor ROM (read-only memory) RAM (random access memory) - execution of code happens here.</description>
    </item>
    
    <item>
      <title>Offline Acquisition Steps</title>
      <link>https://bakerst221b.com/docs/articles/forensics/acquisition/pc-acquisition/</link>
      <pubDate>Sun, 20 Sep 2020 11:04:28 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/forensics/acquisition/pc-acquisition/</guid>
      <description>Logical Backup - doesn&amp;rsquo;t copy all, doesn&amp;rsquo;t copy slack, free space and deleted files. Imaging - bit-by-bit copy.</description>
    </item>
    
    <item>
      <title>BTFM and RTFM iOS</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/ios-btfm-rtfm/</link>
      <pubDate>Fri, 18 Sep 2020 15:30:57 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/ios-btfm-rtfm/</guid>
      <description>This is a combination of BTFM and RTFM (Blue Team Field Manual and Red Team Field Manual) for iOS devices and applications.</description>
    </item>
    
    <item>
      <title>iOS Introduction</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-intro/</link>
      <pubDate>Fri, 18 Sep 2020 15:26:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-intro/</guid>
      <description>Low Level Security UID - key that is fused into Application processor. No one know it and can get from the device.</description>
    </item>
    
    <item>
      <title>ApplePay, GooglePay, SamsungPay</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/general/mobile-payment-systems/</link>
      <pubDate>Thu, 10 Sep 2020 17:49:48 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/general/mobile-payment-systems/</guid>
      <description>Options: Google Wallet, Apple Pay, Samsumg Pay, Amazon Pay, Visa Checkout and PayPal. I think there are more,</description>
    </item>
    
    <item>
      <title>iOS Booting Process</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-booting-process/</link>
      <pubDate>Sun, 20 Sep 2020 11:02:33 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-booting-process/</guid>
      <description>When an iDevice is started, two separate booting processes are taking place: booting of Application Processor and booting of Secure Enclave.</description>
    </item>
    
    <item>
      <title>iOS Structure</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-ipa-structure/</link>
      <pubDate>Fri, 18 Sep 2020 11:54:26 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-ipa-structure/</guid>
      <description>When installed on the device, *.ipa is unzipped into a corresponding folder. That&amp;rsquo;s the contents:</description>
    </item>
    
    <item>
      <title>Apple File Systems</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-file-systems/</link>
      <pubDate>Sun, 20 Sep 2020 12:28:52 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/macos/apple-file-systems/</guid>
      <description>HFS HFS+  Supports large files Efficient disk space usage unicode for filenames name forks file compression journaling dynamic resizing, defragmentation not only for MacOS  APFS  Clones Snapshots Space sharing encryption crash protection sparse files fast directory resizing  iOS has two partitions: system and user.</description>
    </item>
    
    <item>
      <title>iDevice Internals</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-iphone-internals/</link>
      <pubDate>Sun, 20 Sep 2020 12:28:52 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-iphone-internals/</guid>
      <description>This article is about device internals for different versions of iDevices. This can be helpful for forensic examiners since the security mechanisms are sometimes quite different.</description>
    </item>
    
    <item>
      <title>ToDO</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-todo/</link>
      <pubDate>Sun, 20 Sep 2020 12:28:52 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-todo/</guid>
      <description>https://www.youtube.com/watch?v=bmJSWrVuIVQ
https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06h-testing-platform-interaction
cycript
#todo*: https://developer.apple.com/documentation/network/implementing_netcat_with_network_framework
 </description>
    </item>
    
    <item>
      <title>iOS Jailbreaking</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-jailbreaking/</link>
      <pubDate>Fri, 18 Sep 2020 15:42:02 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-jailbreaking/</guid>
      <description>Types of jailbreaking  Tethered jailbreaks don&amp;rsquo;t persist through reboots, so re-applying jailbreaks requires the device to be connected (tethered) to a computer during every reboot.</description>
    </item>
    
    <item>
      <title>iOS Keychain</title>
      <link>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-keychain/</link>
      <pubDate>Fri, 02 Oct 2020 11:38:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/articles/fundamentals/os/mobile/ios/ios-keychain/</guid>
      <description>In this article I&amp;rsquo;m trying to study how keychain works.
Metaphor There once lived a monkey üêí George.</description>
    </item>
    
  </channel>
</rss>
