<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on Analyst</title>
    <link>https://bakerst221b.com/platforms/windows/</link>
    <description>Recent content in windows on Analyst</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Feb 2021 12:13:56 +0300</lastBuildDate><atom:link href="https://bakerst221b.com/platforms/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analysis Tips</title>
      <link>https://bakerst221b.com/docs/reverse/malware-analysis/tips/</link>
      <pubDate>Sun, 07 Feb 2021 12:13:56 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/malware-analysis/tips/</guid>
      <description>In this article I&amp;rsquo;m collecting all the main tips for malware analysis. Some indicators of compromise, some common clues and etc.</description>
    </item>
    
    <item>
      <title>DNS Cache</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-dns-cache/</link>
      <pubDate>Sun, 18 Oct 2020 22:36:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-dns-cache/</guid>
      <description>This research is devoted to DNS cache and &amp;hellip;</description>
    </item>
    
    <item>
      <title>Positive and Negative Numbers</title>
      <link>https://bakerst221b.com/docs/reverse/basics/positive-and-negative-numbers/</link>
      <pubDate>Sun, 18 Oct 2020 22:33:25 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/positive-and-negative-numbers/</guid>
      <description>Intro One&amp;rsquo;s complement Two complement </description>
    </item>
    
    <item>
      <title>Packed Executables</title>
      <link>https://bakerst221b.com/docs/reverse/packing/</link>
      <pubDate>Fri, 09 Oct 2020 10:31:32 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/packing/</guid>
      <description>There are several indicators that the executable is packed. Here they are (this list will be growing as I encounter new indicators):</description>
    </item>
    
    <item>
      <title>Anatomy ðŸ’€ Of PE Executables</title>
      <link>https://bakerst221b.com/docs/reverse/executables/win-pe/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/executables/win-pe/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Antiforensics</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-ads/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-ads/</guid>
      <description>There are several ways to hide day. Some are specific to the OS, some are general.</description>
    </item>
    
    <item>
      <title>Local Authentication</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-local-authentication/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-local-authentication/</guid>
      <description>This article is all about such scary terms as LSA, local authentication, SAM etc. Also, I&amp;rsquo;ve tries to highlight the updates on the implementation for different Windows versions.</description>
    </item>
    
    <item>
      <title>Powershell and Windows Management Instrumentation</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-wmi/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-wmi/</guid>
      <description>Terms cmdlet - put certain enhanced operating system functions into effect when usung powershell, example: Get-Help.</description>
    </item>
    
    <item>
      <title>Valuable Artifcats</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-general/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-general/</guid>
      <description>Recycle bin Registry Thumbs.db Files Browser History Print Spooling? Prefetch  References [1] Digital Archaeology Live Lessons by [Michael W Graves](https://learning.</description>
    </item>
    
    <item>
      <title>Windows Core Processes</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-core/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-core/</guid>
      <description>&lt;p&gt;&lt;em&gt;There are two broad categories of Windows core processes. Processes that initialize system environment and those that initialize the user environment. Whatever is the category, you need to know them well in order to detect abnormal things.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows Hibernation</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-hibernation/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-hibernation/</guid>
      <description>&lt;p&gt;&lt;em&gt;Hibernation files store the last state of RAM before &amp;ldquo;falling asleep&amp;rdquo; ðŸ’¤ . These files are of a particular value when live acquisition is impossible.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows LNK Files</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-lnk/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-lnk/</guid>
      <description>&lt;p&gt;&lt;em&gt;What are LNK files?&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows LSA</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-lsa/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-lsa/</guid>
      <description>SID Below is the structure of a SID. SID, shortly speaking, is a user id. The actual ID of the user, is the RID (relative identifier) part.</description>
    </item>
    
    <item>
      <title>Windows RDP Artifacts</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-rdp/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-rdp/</guid>
      <description>References </description>
    </item>
    
    <item>
      <title>Windows Users and Authentication</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-users-and-auth/</link>
      <pubDate>Mon, 28 Sep 2020 13:21:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-users-and-auth/</guid>
      <description>Accounts Default local user account:
 Administrator Guest HelpAssistant DefaultAccount  Default system accounts (not visible for the user):</description>
    </item>
    
    <item>
      <title>BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/net-btfm/</link>
      <pubDate>Mon, 28 Sep 2020 12:21:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/net-btfm/</guid>
      <description>dshell # MacOSX path to directory with pyenv (example): /Users/[user_name]/.pyenv/versions/3.8.5/envs/python3/lib/python3.8/site-packages/dshell/ decode -l # list decoders decode -d [decoder_name] # decoder info # who talked to whom decode -d ip [capture_file_name].</description>
    </item>
    
    <item>
      <title>Calling ðŸ¤™ Conventions in x86</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-calling-conventions/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-calling-conventions/</guid>
      <description>In this article I&amp;rsquo;m giving an overview of different calling conventions with examples.
Intro Consider the following code snippet:</description>
    </item>
    
    <item>
      <title>Flags</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-flags/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-flags/</guid>
      <description>CF Its full name is carry flag. Its main purpose is to tell that the resulting number after some operations is too much to bear for the registry size.</description>
    </item>
    
    <item>
      <title>Operations</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-operations/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-operations/</guid>
      <description>In this article I&amp;rsquo;m describing all assembly operations that I&amp;rsquo;ve encountered myseld and also wasn&amp;rsquo;t lazy anough to put down an explanation about here.</description>
    </item>
    
    <item>
      <title>Registers</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-registers/</link>
      <pubDate>Sun, 27 Sep 2020 16:31:05 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-registers/</guid>
      <description>EAX EIP EBP RSI/ESI Source Index.
RSI - 64 bit, ESI - 32.
RDI/EDI Destination Index.</description>
    </item>
    
    <item>
      <title>Crackme Algorithm</title>
      <link>https://bakerst221b.com/docs/reverse/crack-me-algo/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/crack-me-algo/</guid>
      <description>Look at the strings fs strings and f in radare2 or rabin -zz Find xrefs for the strings of interest axt @ str.</description>
    </item>
    
    <item>
      <title>From Src to Binary</title>
      <link>https://bakerst221b.com/docs/reverse/basics/from-src-to-binary/</link>
      <pubDate>Thu, 24 Sep 2020 17:46:43 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/from-src-to-binary/</guid>
      <description>To read
https://www.airs.com/blog/archives/38</description>
    </item>
    
    <item>
      <title>Assembly Cheatsheet</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-cheatsheet/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:54 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-cheatsheet/</guid>
      <description>Lorem markdownum aequalis strigis. Saetigeri iubeas, vultu huic alvum nondum de obside ut laniavit arbor palmis, cum quin.</description>
    </item>
    
    <item>
      <title>ARM Assembly</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-arm/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-arm/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>Assembly Intro</title>
      <link>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-intro/</link>
      <pubDate>Thu, 24 Sep 2020 11:43:23 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/reverse/basics/assebly/assembly-intro/</guid>
      <description>In this article I&amp;rsquo;m giving a quick dive-in into assembly. It&amp;rsquo;s very simple and very difficult at the same time.</description>
    </item>
    
    <item>
      <title>Mobile Toolkit</title>
      <link>https://bakerst221b.com/docs/toolkit/toolsdb/mobile-toolkit/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/toolsdb/mobile-toolkit/</guid>
      <description>Debuggers gdb radare2 Other  IDA Pro [Hopper Disassembler](/docs/toolkit/general/reverse-toolkit/#hopper disassembler)  Static code analysis IDA Pro Hopper Disassembler radare2 Utilities Activity Analysis Jailbreaking/Rooting Something Desciption</description>
    </item>
    
    <item>
      <title>Powershell BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/ps-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/ps-btfm/</guid>
      <description>Settings Execution Policy Get Execution Policy. Powershell execution policy is applied to scripts only. Here are the main policies used:</description>
    </item>
    
    <item>
      <title>Windows BTFM</title>
      <link>https://bakerst221b.com/docs/toolkit/manuals/win-btfm/</link>
      <pubDate>Wed, 23 Sep 2020 10:26:29 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/toolkit/manuals/win-btfm/</guid>
      <description>FUC (Frequently Used Commands)
User Get user&amp;rsquo;s SID:
wmic useraccount where name=&amp;#39;veronicazvereva&amp;#39; get sid # or whoami /user # for current user System USB Mounting USB devices on are mounted automatically, but VHD drives might need to be mounted manually.</description>
    </item>
    
    <item>
      <title>Windows OS Primer</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-overview/</link>
      <pubDate>Mon, 08 Jun 2020 09:49:24 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-overview/</guid>
      <description>Plan for Windows Forensics Done (Udemy watched, tools installed and used, conclusions made) is bolded:</description>
    </item>
    
    <item>
      <title>Windows Services</title>
      <link>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-services/</link>
      <pubDate>Mon, 08 Jun 2020 09:49:24 +0300</pubDate>
      
      <guid>https://bakerst221b.com/docs/dfir/forensic-investigation/reference/windows/win-services/</guid>
      <description>MS-PAR
https://twitter.com/StanHacked/status/1412060814488608773</description>
    </item>
    
  </channel>
</rss>
